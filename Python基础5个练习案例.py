#1.判断数值为奇数或偶数
#练习内容：编写一个Python程序，从键盘输入一个整数，判断其是否为奇数或偶数，并输出结果。
num = int(input("请输入一个整数："))
if num % 2 == 0:
    print(num,"是偶数")
else:
    print(num,"是奇数")
"""
判断数值为奇数或偶数
这个案例是一个非常基础的条件判断语句练习，使用if-else语句对输入的整数进行判断，
如果为偶数，输出其为偶数，否则输出其为奇数。
"""
#2.把字符串反转
#练习内容：编写一个Python程序，输入一个字符串，将其反转后输出。
s = input("请输入一个字符串:")
r = s[::-1]
print("反转后的字符串为:",r)
"""
把字符串反转
这个案例涉及到Python中的字符串切片操作，切片操作可以用于对字符串进行取值、翻转等操作，
反转字符串可以通过[::-1]的方式实现。
"""

#3.计算列表中所有元素的平均值
#练习内容：编写一个Python程序，输入一个列表，计算该列表中所有元素的平均值，并输出结果。
lst = [6,2,37,4,5]
average = sum(lst)/len(lst)
print("平均值为：",average)
"""
计算列表中所有元素的平均值
这个案例涉及到Python中的列表操作和数学计算，可以通过sum()函数求和和len()函数求长度，
然后两者相除即可计算出列表中所有元素的平均值。
"""
#4.判断一个字符串是否为回文字符串
#练习内容：编写一个Python程序，输入一个字符串，判断其是否为回文字符串。
s = input("请输入一个字符串：")
if s == s[::-1]:
    print(s,"是回文字符")
else:
    print(s,"不是回文字符")
"""
判断一个字符串是否为回文字符串
这个案例涉及到字符串的反转和判断，可以通过s[::-1]方法获取一个字符串的反转形式，
然后判断原字符串和反转字符串是否相等，如果相等，说明该字符串是回文字符串。
"""
#5.计算两个数之间的所有质数
#练习内容：编写一个Python程序，输入两个整数，计算其之间所有的质数，并输出结果。
start = int(input("请输入起始整数："))
end = int(input("请输入结束整数："))
prime_lst = []
for num in range(start,end+1):
    if num <= 1:
        continue
    for i in range (2,num // 2 + 1):
        if num % i == 0:
            break
    else:
        prime_lst.append(num)
print("起始整数与结束之间的质数为：",prime_lst)
"""
计算两个数之间的所有质数
这个案例涉及到数学计算和循环语句的操作，主要思路是对于输入的两个整数之间的每一个数进行判断是否为质数，
如果是质数则放入一个列表中保存，最后输出这个列表。通过循环语句来遍历每一个整数，并通过除法的方式判断是否为质数。
"""

#案例5进行详细解释和演示。
"""
这个案例的主要目标是计算两个数之间所有的质数。质数指的是只能被1和它本身整除的数，比如2、3、5、7、11等等。
因此，对于一个给定的整数，我们只需要从2开始到它本身的一半（假设这个数大于1），
依次尝试除以每个数，如果除不尽，则这个数是一个质数。

而对于计算两个数之间所有的质数，我们更需要考虑循环语句和列表这两个基本操作。具体步骤如下：

从键盘输入起始和结束整数
start = int(input("请输入起始整数："))
end = int(input("请输入结束整数："))
初始化一个空列表用于保存质数
prime_lst = []
对于输入区间内的每个整数进行判断，如果是质数，则添加到质数列表中
# 遍历起始整数和结束整数之间的每一个整数
for num in range(start, end + 1):
    # 对于小于等于1的数，直接跳过
    if num <= 1:
        continue
    # 尝试对每个数从2到(num // 2 + 1)进行除法操作，如果都除不尽，则这个数是质数
    for i in range(2, num // 2 + 1):
        if num % i == 0:
            break
    else:
        # 如果一个数都不能整除，则说明它是质数，把它添加到质数列表中
        prime_lst.append(num)
输出质数列表
# 输出起始整数和结束整数之间的所有质数
print("起始整数和结束整数之间的质数为：", prime_lst)
通过以上几个步骤，我们就可以计算出两个数之间所有的质数了。
"""